// This file is part of While, an educational programming language and program
// analysis framework.
//
//   Copyright 2023 Florian Brandner
//
// While is free software: you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the Free Software
// Foundation, either version 3 of the License, or (at your option) any later
// version.
//
// While is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// While. If not, see <https://www.gnu.org/licenses/>.
//
// Contact: florian.brandner@telecom-paris.fr
//

fun *min(int *data, int n)
begin
  int *p;
  int *e;
  p = data;
  e = data + n;
  while data < e do
    if *data < *p then
      p = data;
    end;
    data = data + 1;
  end;
  return p;
end

fun swap(int *a, int *b)
begin
  int tmp;
  tmp = *a;
  *a = *b;
  *b = tmp;
end

fun sort(int *data, int n)
begin
  while 0 <= n do
    int *min;
    n = n - 1;
    min = min(data, n);

    swap(min, data);

    data = data + 1;
  end;
end

int x[] = {3, 5, -8, 1, 29};

fun main
begin
  sort(&x[0], 5);

  int i = 0;
  while i < 5 do
    printint(x[i]);
    i = i + 1;
  end;

  return x[0] == -8;
end
